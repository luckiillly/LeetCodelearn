题目描述：给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。
如果没有任何一种硬币组合能组成总金额，返回 -1。
是华为n颗钉子，4、9两种包装的泛化题目。
代码思路：使用动态规划，填写array[amount+1]
int coinChange(vector<int>& coins, int amount) {
        vector<int> array(amount+1,INT_MAX);
        array[0]=0;
        for(int i=0;i<coins.size();i++){
            for(int j=0;j<=amount;j++){
                if(j-coins[i]>=0&&array[j-coins[i]]!=INT_MAX)
                    array[j]=min(array[j],array[j-coins[i]]+1);
            }
        }
        if(array[amount]==INT_MAX){
            return -1;
        }
        else{
            return array[amount];
        }
    }
