题目描述：两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。
给出两个整数 x 和 y，计算它们之间的汉明距离。
代码思路：转成2进制存在vector中，每一位比较计数。
int hammingDistance(int x, int y) {
        vector<int> arrx;
        vector<int> arry;
        while(x>1){
            arrx.push_back(x%2);
            x/=2;
        }
        if(x==1){
            arrx.push_back(1);
        }
        while(y>1){
            arry.push_back(y%2);
            y/=2;
        }
        if(y==1){
            arry.push_back(1);
        }
        int i=0,j=0,result=0;
        while(i<arrx.size()&&j<arry.size()){
            if(arrx[i]!=arry[j])
                result++;
            i++;
            j++;
        }
        while(i<arrx.size()){
            if(arrx[i]==1)
                result++;
            i++;
        }
        while(j<arry.size()){
            if(arry[j]==1)
                result++;
            j++;
        }
        return result;
    }
 一次遍历，通过与运算得到最后一位的值，比较向右移位。   
    public int hammingDistance(int x, int y) {
        int ans = 0;
        while(x != 0 || y != 0){
            if((x & 1) != (y & 1))
                ans++;
            x>>=1;
            y>>=1;
        }
        return ans;
    }
