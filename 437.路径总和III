题目描述：给定一个二叉树，它的每个结点都存放着一个整数值。找出路径和等于给定数值的路径总数。
路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。
二叉树不超过1000个节点，且节点数值范围是 [-1000000,1000000] 的整数。
代码思路：题目分成两部分，从父节点向下找到某个值的路径，所有节点可以为路径出发的父节点。通过递归程序可以清晰实现（学好递归）
 int pathSum(TreeNode* root, int sum) {
        if(root==nullptr)
            return 0;
        return paths(root,sum)+pathSum(root->left,sum)+pathSum(root->right,sum);
    }
    int paths(TreeNode* root, int sum){
        if(root==nullptr)
            return 0;
        int result=0;
        if(root->val==sum)
            result+=1;
        return paths(root->left,sum-root->val)+paths(root->right,sum-root->val)+result;
    }
