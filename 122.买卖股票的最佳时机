题目描述：
给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。
设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。
注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。
代码思路：
双指针法，可以转化为思考找出所有递增序列
int maxProfit(vector<int>& prices) {
        if(prices.size()==0||prices.size()==1)
            return 0;
        int sum=0,left=prices[0],right=0;
        for(int i=1;i<prices.size();i++){
            if(prices[i]>prices[i-1]){
                right=prices[i];
            }
            else{
                int add=(right-left)>0?right-left:0;
                sum+=add;
                left=prices[i];
                right=0;
            }
        }
        int add=(right-left)>0?right-left:0;
        sum+=add;
        return sum;
    }
