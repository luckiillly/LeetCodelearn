题目描述：给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。
例如，给出 n = 3，生成结果为：
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

递归法:
class Solution {
public:
    void makekuohao(string strpre,int left,int right,int max,vector<string> &strout) {
	if (strpre.size() == 2 * max) {
		strout.push_back(strpre);
		return;
	}
	if (left < max) {
		makekuohao(strpre+'(', left+1, right, max,strout);
	}
	if (right < left) {
		makekuohao(strpre+')', left, right+1, max,strout);
	}
    }
    vector<string> generateParenthesis(int n) {
        vector<string> outstr;
        string str="";
        makekuohao(str, 0, 0,n,outstr);
        return outstr;
    }
};
