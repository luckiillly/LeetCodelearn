题目描述：给定一个字符串 s 和一个非空字符串 p，找到 s 中所有是 p 的字母异位词的子串，返回这些子串的起始索引。
字符串只包含小写英文字母，并且字符串 s 和 p 的长度都不超过 20100。
代码思路： asicc map 处理s比p小的情况
vector<int> findAnagrams(string s, string p) {
        if(s.size()<p.size())
            return {};
        vector<int> result;
        for(int i=0;i<s.size()-p.size()+1;i++){
            int arr[128]={0};
            bool signal=true;
            for(int j=0;j<p.size();j++){
                arr[s[i+j]]++;
                arr[p[j]]--;
            }
            for(int m=0;m<128;m++){
                if(arr[m]!=0){
                    signal=false;
                    break;
                }
            }
            if(signal)
                result.push_back(i);
        }
        return result;
    }
    滑动窗口
