题目描述：给定一个由 '1'（陆地）和 '0'（水）组成的的二维网格，计算岛屿的数量。
一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。
你可以假设网格的四个边均被水包围。
11110
11010
11000
00000      
结果为1         
11000
11000
00100
00011
结果为3
代码思路：DFS、BFS、并查集
class Solution {
private:
    void DFS(vector<vector<char>> & grid,int x,int y){
        if(x<0||x>=grid.size()||y<0||y>=grid[0].size()||grid[x][y]!='1')
            return;
        grid[x][y]='0';
        DFS(grid,x-1,y);
        DFS(grid,x+1,y);
        DFS(grid,x,y+1);
        DFS(grid,x,y-1);
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        int row=grid.size();
        if(!row)
            return 0;
        int col=grid[0].size();
        int result=0;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]=='1'){
                    result++;
                    DFS(grid,i,j);
                }
            }
        }
        return result;
    }
};
